@import '../SystemStandards.scss';

div {
	vertical-align: middle;
	line-height:$standard_LineHeight;
	font-size: 	$standard_fontSize;
}

button{
    cursor: pointer;
}


.GrobsBordered_section{
    padding:10px;
    border:1px solid ;
    border-color:$textColor;

    border-radius:5px;
    position:relative;
    margin-top:10px;

    &[data-edgeColor="green"]{
        border-color:$green ;
        &::before {
            color:$green ;
        }
    }

    &[data-edgeColor="blue"]{
        border-color: $blue;
        &::before {
            color:$blue;
        }
    }

    &[data-edgeColor="red"]{
        border-color:$red !important;
        &::before {
            color:$red !important;
        }
    }

    &::before{
        content:attr(data-label);
        position:absolute;
        top:-10px;
        left:10px;
        padding-left:5px;
        padding-right:5px;

        color:$textColor; 
        background-color:$backgroundStandard;
    }
}

*{
	&[data-color="green"]{
	background-color: $green ;
	}
	&[data-color="blue"]{
		background-color: $blue ;
	}
	&[data-color="red"]{
		background-color: $red ;
	}
}
 
 
.GrobsInteractiveContainer {   
    overflow-y:auto;
    overflow-x:hidden;
    border: solid var(--border-width) $blue;
    background: $backgroundInput;
    border: var(--input-border-width) solid var(--background-modifier-border);
    color: $textColor;
    font-family: inherit; 
    font-size: var(--font-ui-small);
    border-radius: var(--input-radius);
    outline: none; 
    transition: 0.3s ease; 

	&[data-disabled="true"]{ 
		border: solid var(--border-width) $blue;
		background:transparent;
		border: var(--input-border-width) solid var(--background-modifier-border);
		color: $textColor;
		font-family: inherit; 
		font-size: var(--font-ui-small);
		border-radius: var(--input-radius);
		outline: none; 
		transition: 0.3s ease;
	} 
}

.GrobsInteractiveColoredBorder{
    border: 1px solid ;
    padding:10px;
    border-radius: 2px;
    
    // state colors 
    & {
        transition: border-color $flashAnimTime $flashAnimType;
        &[data-state="good"]{
            border-color:$color_success; 
        }
        &[data-state="error"]{
            border-color:$color_error;
        }
        &[data-state="verbose"]{
            border-color:$color_verbose;
        }
        &[data-state="flash"]{
            border-color:$color_flash;
        }
    }

    // cornerText 
    &[data-state-text] {

        &[data-state="good"]::before {
            color:$color_success; 
        }
        &[data-state="error"]::before {
            color:$color_error;
        }
        &[data-state="verbose"]::before {
            color:$color_verbose;
        }
        &[data-state="flash"]::before {
            color:$color_flash;
        }
        &::before{
            transition: color $flashAnimTime $flashAnimType;
            display: block;
            width: fit-content;
            padding-left:15px;
            padding-right: 15px;
            height:$standard_LineHeight;
            margin-top: -0.7 * ($standard_LineHeight);
            content:attr(data-state-text);
            background-color: $backgroundStandard;
        }
    }
}


.GrobsButton{
    height:$standard_LineHeight;
    padding:$standard_LineHeight;
    border-radius: 2px;
    background: var(--interactive-normal);
    box-shadow: var(--input-shadow);
     
    display: inline-flex;
    align-items: center;
    justify-content: center;
    color: var(--text-normal);
    font-size: var(--font-ui-small);
    border-radius: var(--button-radius);
    border: 0;
    padding: var(--size-4-1) var(--size-4-3);
    height: var(--input-height);
    font-weight: var(--input-font-weight);
    cursor: var(--cursor);
    font-family: inherit;
    outline: none;
    user-select: none;
    white-space: nowrap;

    cursor: pointer;

    &:hover{
        background-color: var(--interactive-accent);
        color: var(--text-on-accent);
 
        display: inline-flex;
        align-items: center;
        justify-content: center;
        color: var(--text-normal);
        font-size: var(--font-ui-small);
        border-radius: var(--button-radius);
        border: 0;
        padding: var(--size-4-1) var(--size-4-3);
        height: var(--input-height);
        font-weight: var(--input-font-weight); 
        font-family: inherit;
        outline: none;
        user-select: none;
        white-space: nowrap;
    }

}

.lineBreak, .linebreak{
    height:$standard_LineHeight;
}
.blockBreak{
    height:$standard_BlockHeight;
}

.grobModal {
    
    background-color: $backgroundStandard;
    border-radius: var(--modal-radius);
    border:var(--modal-border-width) solid var(--modal-border-color);
    padding: var(--size-4-4);
    box-shadow: 4px 4px 0px 0px black;
    width: calc(100% - 2*var(--size-4-4));
    position: absolute; 
    z-index:100;
}